plugins {
    id("io.micronaut.library") version "3.4.1"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

dependencies {
//    implementation("com.amazonaws:aws-lambda-java-events").version {
//        strictly("2.2.9")
//    } // use latest 2.x here - Marc
//
//    implementation("com.amazonaws:aws-java-sdk-s3").version {
//        strictly("1.11.163")
//    } // used in aws-lambda-java-events 2.2.9 (refer pom.xml)

    implementation("com.amazonaws:aws-lambda-java-events:3.11.0")

    implementation("com.amazonaws:aws-lambda-java-serialization:1.0.0")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("net.coobird:thumbnailator:0.4.17")
    implementation("software.amazon.awssdk:s3:2.17.210") // import correct/latest version of the S3Event - Tony
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    implementation("io.micronaut.aws:micronaut-function-aws")

    testImplementation("io.micronaut:micronaut-http-client")

}


java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

micronaut {
    runtime("lambda_java")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}

task copyRuntimeDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/dependency'
}

build.dependsOn copyRuntimeDependencies

